<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cf.dao.FuncpoolDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.cf.entity.FuncpoolEntity" id="funcpoolMap">
        <result property="id" column="id"/>
        <result property="pname" column="pname"/>
        <result property="ptype" column="ptype"/>
    </resultMap>
	<!-- 查询池名是否重复 -->
	<select id="queryfunpoolname" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(0) from funcpool
		where pname = #{pname}
	</select>
	<!-- 查询功能池 -->
	<select id="queryPoolList" resultType="com.cf.entity.FuncpoolEntity">
		select * from funcpool
	</select>
	
	<select id="queryObject" resultType="com.cf.entity.FuncpoolEntity">
		select * from funcpool where id = #{value}
	</select>

	<select id="queryList" resultType="com.cf.entity.FuncpoolEntity">
		select * from funcpool
		<where>
			<if test="pname != null and pname.trim() != ''">
				and `pname` like concat('%',#{pname},'%') 
			</if>
		</where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by ptype
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from funcpool 
	</select>
	 
	<insert id="save" parameterType="com.cf.entity.FuncpoolEntity">
		<selectKey keyProperty="id" resultType="String" order="BEFORE">  
        	select  replace(uuid(),'-','')   from dual
    	</selectKey>
		insert into funcpool
		(
			`id`, 
			`pname`, 
			`ptype`
		)
		values
		(
			#{id}, 
			#{pname}, 
			#{ptype}
		)
	</insert>
	 
	<update id="update" parameterType="com.cf.entity.FuncpoolEntity">
		update funcpool 
		<set>
			<if test="pname != null">`pname` = #{pname}, </if>
			<if test="ptype != null">`ptype` = #{ptype}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from funcpool where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from funcpool where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>